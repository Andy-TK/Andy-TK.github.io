I"9$<!-- 数学公式 -->
<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
      inlineMath: [['$','$']]
    }
  });
</script>

<h1 id="lecture-05-生成启发函数">Lecture 05 生成启发函数</h1>
<p>现在，我们来看一下如何生成启发函数。主要内容如下：</p>
<ol>
  <li>动机</li>
  <li>非正式松弛</li>
  <li>正式松弛</li>
  <li>在搜索时松弛</li>
  <li>结论</li>
</ol>

<h2 id="1-动机">1. 动机</h2>

<p>想象一下，你已经毕业了，并且入职了一家商业软件开发公司。<br />
<strong>老板</strong>：<span style="color:red">这里有一个问题需要解决。</span><br />
<strong>你</strong>（想）：嗯，我觉得启发式搜索可能会有用。<br />
<strong>你</strong>（想）：嗯，我需要一个启发函数，问题是 <span style="color:red">怎么得到呢？</span></p>

<p>想象一下，你是一个规划系统。<br />
<strong>某人</strong>：<span style="color:red">嘿，这是 PDDL 输入，请解决它。</span>
<strong>你</strong>（想）：嗯，我唯一知道的方法就是启发式搜索。
<strong>你</strong>（想）：嗯，我需要一个启发函数。<br />
<strong>你</strong>：问题是 <span style="color:red">怎么得到呢？</span></p>

<p>因此，我们希望能够提出一种自动生成启发函数的方法，可以适用于所有的规划问题，而不是针对某个特定问题的启发进行硬编码。</p>

<p><strong>“松弛”（Relaxation）是一种构造启发函数的方法。</strong></p>

<ul>
  <li>在为需要解决的问题编写解决方案时，可以使用它。</li>
  <li>规划系统可以使用它从规划任务描述（PDDL 输入）自动生成启发函数。
    <ul>
      <li><strong>注意 1</strong>：如果用户必须手动提供启发函数，那么我们将失去两个主要优点（通用性、自治性、灵活性和快速原型设计，请参阅 $\to$ Lecture 1-2）。</li>
      <li><strong>注意 2</strong>：当然可以使用户有 <strong>可能</strong>（方便地）提供其他启发函数。（本课程未涵盖）</li>
    </ul>
  </li>
</ul>

<h2 id="2-非正式松弛">2. 非正式松弛</h2>
<h3 id="21-如何非正式松弛">2.1 如何非正式松弛</h3>
<p><strong>如何松弛：</strong></p>
<ul>
  <li>我们有一个问题 $\mathcal P$，我们希望估计它的完美启发 $h^*$。</li>
  <li>我们定义了一个 <span style="color:red">更简单的问题</span> $\mathcal P’$，它的完美启发 $h’^*$ 可以用来 <span style="color:red">估计 $h^*$</span>。</li>
  <li>我们定义了一个转换 $r$，可以将 $\mathcal P$ 中的实例 <span style="color:red">简化为</span> $\mathcal P’$ 的实例。</li>
  <li>给定实例 $\Pi \in \mathcal P$，我们用 $h’^*(r(\Pi))$ 来估计 $h^*(\Pi)$。</li>
</ul>

<p>$\to$ 松弛意味着简化问题，并将对较简单问题的解决方案作为对实际问题的解决方案的启发式估计。</p>

<h3 id="22-例子寻路问题中的松弛">2.2 例子：寻路问题中的松弛</h3>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-05-19-WX20200519-164603%402x.png" width="80%" /></p>

<p>如果我希望找到一条从一个点到另一个点的路径，这可能是一个相当复杂的问题，具体取决于不同的点之间有多少条链接。该原始问题的简化问题可以是：寻找一条从一个点到另一个点的欧几里得距离，或者说，一只鸟从起点 飞到终点的路径。</p>

<p><span style="color:red">如何通过松弛推导出直线距离？</span></p>

<ul>
  <li><span style="color:blue">问题 $\mathcal P$</span>：寻找路径。</li>
  <li><span style="color:blue">简化问题 $\mathcal P’$</span>：为一只鸟寻找路径。</li>
  <li><span style="color:blue">$\mathcal P’$ 的完美启发 $h’^*$</span>：直线距离。</li>
  <li><span style="color:blue">转换 $r$</span>：假装你是一只鸟。</li>
</ul>

<h3 id="23-例子八数码问题中的松弛">2.3 例子：八数码问题中的松弛</h3>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-05-19-WX20200519-170006%402x.png" width="50%" /></p>

<p>$\mathcal P$ 的完美启发 $h^*$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽，如果 A和 B 是邻接的，并且 B 是空的。”</p>

<ul>
  <li>
    <p><span style="color:red">如何推导出曼哈顿距离启发（Manhattan distance heuristic）？</span><br />
$\mathcal P’$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽，如果 A和 B 是邻接的。”</p>

    <p>我们可以将问题简化为：只要两个方槽邻接即可移动码块，而不必考虑目标方槽是否为空。基于这样的假设，我们可以得到曼哈顿距离启发。例如：上图中，码块 1 从初始状态中的位置移动到目标状态中的位置，其曼哈顿启发为 3（即向上移动 2 格，再向左移动 1 格）。</p>
  </li>
  <li>
    <p><span style="color:red">如何推导出错位码块启发（misplaced tiles heuristic）？</span><br />
$\mathcal P’$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽。”</p>

    <p>一种更简单的考虑是：码块可以从一个方槽移动到其他任意一个方槽。即码块 1 可以从初始状态中的位置直接 1 步移到目标状态中的位置。</p>
  </li>
  <li>两种方法中的 $h’^*$（对应于 $r$）：$\mathcal P’$ 中的最优代价（对应于采取不同的行动）。</li>
  <li>这里：曼哈顿距离 $=18$，错位码块 $=8$。</li>
</ul>

<h3 id="24-例子目标计数问题中的松弛">2.4 例子：目标计数问题中的松弛</h3>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-05-19-WX20200519-172542%402x.png" width="50%" /></p>

<p>一共 5 个城市：悉尼（Sydney, Sy）、阿德莱德（Adelaide, Ad）、布里斯班（Brisbane, Br）、珀斯（Perth, Pe）、达尔文（Darwin, Da）。一辆卡车从悉尼出发，途径所有城市，最后返回悉尼。</p>

<ul>
  <li><span style="color:blue">命题（Propositions）$P$</span>：$at(x)$ 表示所在城市，$v(x)$ 表示已访问过的城市，其中，<script type="math/tex">x\in \{Sy, Ad, Br, Pe, Da\}</script>。</li>
  <li><span style="color:blue">行动（Actions）$a\in A$</span>：$drive(x,y)$ 表示从城市 $x$ 前往城市 $y$，其中，$x$ 和 $y$ 之间存在道路；前置条件 <script type="math/tex">pre_a=\{at(x)\}</script>，添加列表 <script type="math/tex">add_a=\{at(y),v(y)\}</script>，删除列表 <script type="math/tex">del_a=\{at(x)\}</script>。</li>
  <li><span style="color:blue">初始状态（Initial state）$I$</span>：$at(Sy),v(Sy)$。</li>
  <li><span style="color:blue">目标状态（Goal state）$G$</span>：$at(Sy)$，$v(x)$ 对于所有的 $x$。</li>
</ul>

<p>下里是一种可以采用的松弛，考虑我们还需要到达的目标数量，<span style="color:red">假设我们可以直接到达每个城市</span>：</p>

<ul>
  <li><span style="color:blue">问题 $\mathcal P$</span>：所有的 STRIPS 规划问题。</li>
  <li><span style="color:blue">简化问题 $\mathcal P’$</span>：所有的 STRIPS 规划问题，其中，前置条件和删除列表都是空集。</li>
  <li><span style="color:blue">$\mathcal P’$ 的完美启发 $h’^<em>$&lt;/span&gt;：最优规划代价（$=h^</em>$）。</span></li>
  <li><span style="color:blue">转换 $r$</span>：移除前置条件和删除列表。</li>
  <li>这里的启发值是多少？$4$（因为我们在初始状态时已经到达了悉尼）。</li>
</ul>

<p>$\to$ 前置条件和删除列表为空集的最优 STRIPS 规划仍然是一个 <strong>NP-困难</strong> 问题。（通过添加列表设定的目标，从 MINIMUM COVER 中减少。）</p>

<p>$\to$ 需要 <span style="color:red">近似</span> $\mathcal P’$ 的完美启发 $h’^*$。因此，<span style="color:blue">目标计数（goal counting）</span>：用尚未访问的目标数近似估计 $h’^*$。</p>

<h2 id="3-正式松弛">3. 正式松弛</h2>
<h3 id="31-如何正式松弛在我们开始之前">3.1 如何正式松弛：在我们开始之前</h3>

<ul>
  <li>在下一小节 3.2 中给出的定义不存在于任何课本或者论文中。</li>
  <li>生成启发函数的方法各不相同，很难（或者说几乎不可能）仅通过一个定义就能（自然地）捕获所有的启发函数。</li>
  <li>但是，一个正式的定义对于准确说明实际问题中的相关区分线是有用的。</li>
  <li>目前的定义在这方面做得很好。<br />
$\to$ 它很适合规划中当前使用的内容。<br />
$\to$ 它在区分线中很灵活，它抓住了所有松弛思想的基本构造和本质。</li>
</ul>

<h3 id="32-松弛">3.2 松弛</h3>

<h2 id="8-扩展阅读">8. 扩展阅读</h2>

<p><span style="color:red"></span></p>

<p><span style="color:blue"></span></p>

<p>下节内容：生成启发函数</p>

:ET