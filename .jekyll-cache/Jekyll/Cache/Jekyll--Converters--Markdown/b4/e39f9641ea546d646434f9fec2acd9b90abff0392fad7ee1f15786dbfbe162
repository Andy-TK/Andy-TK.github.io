I"j<!-- 数学公式 -->
<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
      inlineMath: [['$','$']]
    }
  });
</script>

<h1 id="lecture-05-生成启发函数">Lecture 05 生成启发函数</h1>
<p>现在，我们来看一下如何生成启发函数。主要内容如下：</p>
<ol>
  <li>动机</li>
  <li>非正式松弛</li>
  <li>正式松弛</li>
  <li>在搜索时松弛</li>
  <li>结论</li>
</ol>

<h2 id="1-动机">1. 动机</h2>

<p>想象一下，你已经毕业了，并且入职了一家商业软件开发公司。<br />
<strong>老板</strong>：<span style="color:red">这里有一个问题需要解决。</span><br />
<strong>你</strong>（想）：嗯，我觉得启发式搜索可能会有用。<br />
<strong>你</strong>（想）：嗯，我需要一个启发函数，问题是 <span style="color:red">怎么得到呢？</span></p>

<p>想象一下，你是一个规划系统。<br />
<strong>某人</strong>：<span style="color:red">嘿，这是 PDDL 输入，请解决它。</span>
<strong>你</strong>（想）：嗯，我唯一知道的方法就是启发式搜索。
<strong>你</strong>（想）：嗯，我需要一个启发函数。<br />
<strong>你</strong>：问题是 <span style="color:red">怎么得到呢？</span></p>

<p>因此，我们希望能够提出一种自动生成启发函数的方法，可以适用于所有的规划问题，而不是针对某个特定问题的启发进行硬编码。</p>

<p><strong>“松弛”（Relaxation）是一种构造启发函数的方法。</strong></p>

<ul>
  <li>在为需要解决的问题编写解决方案时，可以使用它。</li>
  <li>规划系统可以使用它从规划任务描述（PDDL 输入）自动生成启发函数。
    <ul>
      <li><strong>注意 1</strong>：如果用户必须手动提供启发函数，那么我们将失去两个主要优点（通用性、自治性、灵活性和快速原型设计，请参阅 $\to$ Lecture 1-2）。</li>
      <li><strong>注意 2</strong>：当然可以使用户有 <strong>可能</strong>（方便地）提供其他启发函数。（本课程未涵盖）</li>
    </ul>
  </li>
</ul>

<h2 id="2-非正式松弛">2. 非正式松弛</h2>
<h3 id="21-如何非正式松弛">2.1 如何非正式松弛</h3>
<p><strong>如何松弛：</strong></p>
<ul>
  <li>我们有一个问题 $\mathcal P$，我们希望估计它的完美启发 $h^*$。</li>
  <li>我们定义了一个 <span style="color:red">更简单的问题</span> $\mathcal P’$，它的完美启发 $h’^*$ 可以用来 <span style="color:red">估计 $h^*$</span>。</li>
  <li>我们定义了一个转换 $r$，可以将 $\mathcal P$ 中的实例 <span style="color:red">简化为</span> $\mathcal P’$ 的实例。</li>
  <li>给定实例 $\Pi \in \mathcal P$，我们用 $h’^*(r(\Pi))$ 来估计 $h^*(\Pi)$。</li>
</ul>

<p>$\to$ 松弛意味着简化问题，并将对较简单问题的解决方案作为对实际问题的解决方案的启发式估计。</p>

<h3 id="22-例子寻路问题中的松弛">2.2 例子：寻路问题中的松弛</h3>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-05-19-WX20200519-164603%402x.png" width="80%" /></p>

<p>如果我希望找到一条从一个点到另一个点的路径，这可能是一个相当复杂的问题，具体取决于不同的点之间有多少条链接。该原始问题的简化问题可以是：寻找一条从一个点到另一个点的欧几里得距离，或者说，一只鸟从起点 飞到终点的路径。</p>

<p><span style="color:red">如何通过松弛推导出直线距离？</span></p>

<ul>
  <li><span style="color:blue">问题 $\mathcal P$</span>：寻找路径。</li>
  <li><span style="color:blue">简化问题 $\mathcal P’$</span>：为一只鸟寻找路径。</li>
  <li><span style="color:blue">$\mathcal P’$ 的完美启发 $h’^*$</span>：直线距离。</li>
  <li><span style="color:blue">转换 $r$</span>：假装你是一只鸟。</li>
</ul>

<h3 id="23-例子八数码问题中的松弛">2.3 例子：八数码问题中的松弛</h3>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-05-19-WX20200519-170006%402x.png" width="50%" /></p>

<p>$\mathcal P$ 的完美启发 $h^*$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽，如果 A和 B 是邻接的，并且 B 是空的。”</p>

<ul>
  <li><span style="color:red">如何推导出曼哈顿距离启发？</span><br />
我们可以将问题简化为：只要两个方槽x’l
$\mathcal P’$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽，如果 A和 B 是邻接的。”</li>
  <li><span style="color:red">如何推导出错位码块启发？</span><br />
$\mathcal P’$：行动（Actions）$=$ “一个码块可以从 A 方槽移动到 B 方槽。”</li>
</ul>

<h2 id="8-扩展阅读">8. 扩展阅读</h2>

<p><span style="color:red"></span></p>

<p><span style="color:blue"></span></p>

<p>下节内容：生成启发函数</p>

:ET