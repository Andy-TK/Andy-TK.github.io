I"<!-- 数学公式 -->
<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
      inlineMath: [['$','$']]
    }
  });
</script>

<h1 id="lecture-02-文本预处理">Lecture 02 文本预处理</h1>

<h2 id="1-引言">1. 引言</h2>
<p>现在我们将学习文本预处理。通常情况下，语言数据是带有噪声的，是不干净的，你可能是从网上下载的，它可能有自己的格式，所以，在使用这些数据之前，我们需要对其进行清洗。</p>

<h3 id="11-定义">1.1 定义</h3>
<ul>
  <li><strong>语料库（Corpus）</strong>：一个 <em>文档（documents）</em> 的 <em>集合（collection）</em>
    <ul>
      <li>例如：维基百科中全部的英文文章</li>
    </ul>
  </li>
  <li><strong>文档（Document）</strong>：一个或者多个 <em>句子（sentence）</em>
    <ul>
      <li>通常，这些句子是经过理解性组织过的，可能是谈论某件事情，而不仅仅是一些随机的句子。</li>
      <li>例如：维基百科的一篇文章</li>
    </ul>
  </li>
  <li><strong>句子（Sentence）</strong>
    <ul>
      <li>$“The\; student\; is\; enrolled\; at\; the \;University \;of\; Melbourne.”$</li>
    </ul>
  </li>
  <li><strong>单词（Words）</strong>：带有意义或者功能的 <em>字符序列（sequence of characters）</em></li>
  <li><strong>单词 <span style="color:red">token</span></strong>：数据中你所见的每个单词实例。
    <ul>
      <li>例如：上面的例句中有 9 个 tokens（单词 $“the”$ 算了 2 次）</li>
    </ul>
  </li>
  <li><strong>单词 <span style="color:red">type</span></strong>：不同于 token，它是数据中的那些唯一的单词，即不包含重复单词
    <ul>
      <li>例如：上面的例句中有 8 个 type（单词 $“the”$ 只算 1 次）</li>
    </ul>
  </li>
  <li><strong>词典（Lexicon 或者 Dictionary）</strong>：<em>单词 types</em> 的一个集合</li>
</ul>

<h3 id="12-有多少个唯一单词">1.2 有多少个唯一单词？</h3>

<p>这个问题实际上取决于你的数据集有多大，你的数据越多，单词也就越多。当然，像在 Google N-gram 语料库中，并非每一个词都是合法的英文单词，例如：格式标签、URL 等等。所以，我们很难回答在某种语言中有多少个唯一单词，因为人们总是会创造一些新的名字、新的缩写等等，所以单词数量实际上是与数据规模成正比的。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center"> </th>
      <th style="text-align: center">Token 数量（$N$）</th>
      <th style="text-align: center">Type 数量（$|V|$）</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">交换台电话对话</td>
      <td style="text-align: center">240 万</td>
      <td style="text-align: center">2 万</td>
    </tr>
    <tr>
      <td style="text-align: center">莎士比亚</td>
      <td style="text-align: center">80 万</td>
      <td style="text-align: center">3 万 1 千</td>
    </tr>
    <tr>
      <td style="text-align: center">Google N-gram</td>
      <td style="text-align: center">1 万亿</td>
      <td style="text-align: center">1300 万</td>
    </tr>
  </tbody>
</table>

<h3 id="13-为什么要进行预处理">1.3 为什么要进行预处理？</h3>

<ul>
  <li>对于大多数 NLP 应用，我们的输入都是文档：
    <ul>
      <li>
        <p>$“This\; movie\; is\; so\; great!!!\; U\; should\; definitely\; watch\; it\; in\; the\; theater!\; Best\; sci\text{-}fi$<br />
$eva!”\to$ 😀</p>

        <p>在这个例子中，我们有一个情感预测任务：我们有一条用户评论，然后我们需要对其进行情感预测以便对电影进行评分。</p>

        <p>$“Eu \;estive\; em \;Melbourne \;no\; ano\; passado.” \to “I\; was\; in\; Melbourne\; last\; year.”$</p>

        <p>在这个例子中，我们有一个机器翻译任务：我们有一段某种语言的文本，然后我们试图将其转换为一段另一种语言的文本。</p>
      </li>
    </ul>
  </li>
  <li><strong>关键点</strong>：语言是具有 <span style="color:red">组合性的（compositional）</span>。作为人类，我们并不是直接浏览一段长长的文本，然后随机猜测它的意思，相反，我们可以将这些文档拆解为各个组件或单词，然后我们从左至右地阅读一个个的单词。意义是具有具有组合性的，单词也是具有组合性的，而单词流构成了意义。
从左至右地阅读 要理解语言，计算机应该这样做。</li>
</ul>

<p>下节内容：文本处理</p>

:ET