I"дв<h1 id="lecture-16-Ф█÷Е╓╠Е┤╫Ф∙╟-Д╨▄">Lecture 16 Ф█÷Е╓╠Е┤╫Ф∙╟ (Д╨▄)</h1>

<p>Д╦┼Х┼┌Х╞╬Д╦╜О╪▄Ф┬▒Д╩╛Е╜╕Д╧═Д╨├Ф█÷Е╓╠Е┤╫Ф∙╟Г └Ф╕┌Е©╣Д╩╔Е▐┼Е⌡⌡Г╖█Д╦█Е░▄Г └Ф█÷Е╓╠Е┤╫Ф∙╟Ц─┌Х©≥Х┼┌Х╞╬Ф┬▒Д╩╛Г╩╖Г╩╜Е╜╕Д╧═ PyTorch Д╦╜Ф▐░Д╬⌡Г └Е▐╕Е╓√Е█│Е⌡⌡Г╖█Ф█÷Е╓╠Е┤╫Ф∙╟Ц─┌</p>

<h2 id="1-pytorch-Д╦╜Г └Ф█÷Е╓╠Е┤╫Ф∙╟">1. PyTorch Д╦╜Г └Ф█÷Е╓╠Е┤╫Ф∙╟</h2>

<p>И╕√Е┘┬Ф┬▒Д╩╛Ф²╔Г°▀Е°╗Е⌡·Е╫▓Д╩╩Е┼║Д╦╜Е╦╦Г■╗Г └Д╦╓Д╦╙Ф█÷Е╓╠Е┤╫Ф∙╟ <code class="language-plaintext highlighter-rouge">nn.L1Loss</code> Е▓▄ <code class="language-plaintext highlighter-rouge">nn.MSELoss</code>О╪ </p>

<h4 id="nnl1loss"><code class="language-plaintext highlighter-rouge">nn.L1Loss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Х╝║Г╝≈ <code class="language-plaintext highlighter-rouge">inputs</code> Д╦▌ <code class="language-plaintext highlighter-rouge">target</code> Д╧▀Е╥╝Г └Г╩²Е╞╧Е─╪Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">L1Loss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌
    <ul>
      <li><code class="language-plaintext highlighter-rouge">none</code>О╪ И─░Д╦╙Е┘┐Г╢═Х╝║Г╝≈Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">sum</code>О╪ Ф┴─Ф°┴Е┘┐Г╢═Ф╠┌Е▓▄О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">mean</code>О╪ Е┼═Ф²┐Е╧ЁЕ²┤О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
    </ul>
  </li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[l_n = |x_n - y_n |\]

<h4 id="nnmseloss"><code class="language-plaintext highlighter-rouge">nn.MSELoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Х╝║Г╝≈ <code class="language-plaintext highlighter-rouge">inputs</code> Д╦▌ <code class="language-plaintext highlighter-rouge">target</code> Д╧▀Е╥╝Г └Е╧ЁФ√╧Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">MSELoss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌
    <ul>
      <li><code class="language-plaintext highlighter-rouge">none</code>О╪ И─░Д╦╙Е┘┐Г╢═Х╝║Г╝≈Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">sum</code>О╪ Ф┴─Ф°┴Е┘┐Г╢═Ф╠┌Е▓▄О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">mean</code>О╪ Е┼═Ф²┐Е╧ЁЕ²┤О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
    </ul>
  </li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[l_n = (x_n - y_n )^2\]

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">torch</span>
<span class="kn">import</span> <span class="nn">torch.nn</span> <span class="k">as</span> <span class="n">nn</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">tools.common_tools</span> <span class="kn">import</span> <span class="n">set_seed</span>

<span class="n">set_seed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Х╝╬Г╫╝И ▐Ф°╨Г╖█Е╜░
</span>
<span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">ones</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span> <span class="o">*</span> <span class="mi">3</span>

<span class="c1"># ------------------------------------ L1 loss ----------------------------------
</span><span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">L1Loss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"input:{}</span><span class="se">\n</span><span class="s">target:{}</span><span class="se">\n</span><span class="s">L1 loss:{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">loss</span><span class="p">))</span>

<span class="c1"># ------------------------------------ MSE loss ---------------------------------
</span><span class="n">loss_f_mse</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MSELoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss_mse</span> <span class="o">=</span> <span class="n">loss_f_mse</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"MSE loss:{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">loss_mse</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre>input:tensor([[1., 1.],
        [1., 1.]])
target:tensor([[3., 3.],
        [3., 3.]])
L1 loss:tensor([[2., 2.],
        [2., 2.]])
MSE loss:tensor([[4., 4.],
        [4., 4.]])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Х©≥И┤▄Ф┬▒Д╩╛Г └Ф╞▐Д╦╙Г╔·Г╩▐Е┘┐Г └Х╬⌠Е┘╔Д╦╨ $x_i = 1$О╪▄Х╬⌠Е┤╨Д╦╨ $y_i=3$Ц─┌Ф┴─Д╩╔О╪▄Ф╞▐Д╦╙Г╔·Г╩▐Е┘┐Г └ L1 loss Д╦╨ $|x_i - y_i| = |1-3| = 2$О╪▄MSE loss Д╦╨ $(x_i - y_i)^2 = (1-3)^2 = 4$Ц─┌</p>

<h4 id="nnsmoothl1loss"><code class="language-plaintext highlighter-rouge">nn.SmoothL1Loss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Е╧ЁФ╩▒Г └ L1 LossО╪▄Е▐╞Д╩╔Е┤▐Х╫╩Г╕╩Г╬╓Г┌╧Е╦╕Ф²╔Г └Е╫╠Е⌠█Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">SmoothL1Loss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌
    <ul>
      <li><code class="language-plaintext highlighter-rouge">none</code>О╪ И─░Д╦╙Е┘┐Г╢═Х╝║Г╝≈Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">sum</code>О╪ Ф┴─Ф°┴Е┘┐Г╢═Ф╠┌Е▓▄О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">mean</code>О╪ Е┼═Ф²┐Е╧ЁЕ²┤О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
    </ul>
  </li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\mathrm{loss}(x,y) = \dfrac{1}{n}\sum_{i=1}^n z_i\]

<p>Е┘╤Д╦╜О╪▄</p>

\[z_i = \begin{cases}0.5(x_i - y_i)^2\;, &amp; \text{if } |x_i - y_i|&lt; 1 \\[2ex] |x_i - y_i| - 0.5\;, &amp; \text{otherwise}\end{cases}\]

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="rouge-code"><pre><span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">steps</span><span class="o">=</span><span class="mi">500</span><span class="p">)</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">zeros_like</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>

<span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">SmoothL1Loss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss_smooth</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="n">loss_l1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">inputs</span><span class="p">.</span><span class="n">numpy</span><span class="p">())</span>

<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">inputs</span><span class="p">.</span><span class="n">numpy</span><span class="p">(),</span> <span class="n">loss_smooth</span><span class="p">.</span><span class="n">numpy</span><span class="p">(),</span> <span class="n">label</span><span class="o">=</span><span class="s">'Smooth L1 Loss'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">inputs</span><span class="p">.</span><span class="n">numpy</span><span class="p">(),</span> <span class="n">loss_l1</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'L1 loss'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'x_i - y_i'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'loss value'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<p><img src="http://andy-blog.oss-cn-beijing.aliyuncs.com/blog/2020-12-24-smooth.png" width="60%" /></p>

<h4 id="poissonnllloss"><code class="language-plaintext highlighter-rouge">PoissonNLLLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ ФЁ┼Ф²╬Е┬├Е╦┐Г └Х╢÷Е╞╧Ф∙╟Д╪╪Г└╤Ф█÷Е╓╠Е┤╫Ф∙╟Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">PoissonNLLLoss</span><span class="p">(</span>
    <span class="n">log_input</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">full</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">eps</span><span class="o">=</span><span class="mf">1e-08</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">log_input</code>О╪ Х╬⌠Е┘╔Ф≤╞Е░╕Д╦╨Е╞╧Ф∙╟Е╫╒Е╪▐О╪▄Е├ЁЕ╝ Х╝║Г╝≈Е┘╛Е╪▐Ц─┌</li>
  <li><code class="language-plaintext highlighter-rouge">full</code>О╪ Х╝║Г╝≈Ф┴─Ф°┴ lossО╪▄И╩≤Х╝╓Д╦╨ <code class="language-plaintext highlighter-rouge">False</code>Ц─┌</li>
  <li><code class="language-plaintext highlighter-rouge">eps</code>О╪ Д©╝Ф╜ёИ║╧О╪▄И│©Е┘█ <code class="language-plaintext highlighter-rouge">input</code> Д╦╨ $0$ Ф≈╤О╪▄<code class="language-plaintext highlighter-rouge">log(input)</code> Д╦╨ <code class="language-plaintext highlighter-rouge">nan</code> Г └Ф┐┘Е├╣Ц─┌</li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

<ul>
  <li>
    <p>Е╫⌠ <code class="language-plaintext highlighter-rouge">log_input=True</code> Ф≈╤О╪ </p>

\[\mathrm{loss}(x_n, y_n) = e^{x_n} - x_n \cdot y_n\]
  </li>
  <li>
    <p>Е╫⌠ <code class="language-plaintext highlighter-rouge">log_input=False</code> Ф≈╤О╪ </p>

\[\mathrm{loss}(x_n, y_n) = x_n - y_n \cdot \log(x_n + \mathrm{eps})\]
  </li>
</ul>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">randn</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

<span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">PoissonNLLLoss</span><span class="p">(</span><span class="n">log_input</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">full</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"input:{}</span><span class="se">\n</span><span class="s">target:{}</span><span class="se">\n</span><span class="s">Poisson NLL loss:{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">loss</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre>input:tensor([[0.6614, 0.2669],
        [0.0617, 0.6213]])
target:tensor([[-0.4519, -0.1661],
        [-1.5228,  0.3817]])
Poisson NLL loss:tensor([[2.2363, 1.3503],
        [1.1575, 1.6242]])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Д╦▀И²╒Ф┬▒Д╩╛Д╩╔Г╛╛Д╦─Д╦╙Г╔·Г╩▐Е┘┐Г └ loss Д╦╨Д╬▀О╪▄И─ Х©┤Ф┴▀Е┼╗Х╝║Г╝≈Ф²╔И╙▄Х╞│Ф┬▒Д╩╛Е┴█И²╒Г └Е┘╛Е╪▐Ф≤╞Е░╕Ф╜ёГ║╝О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">loss_1</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">inputs</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">])</span> <span class="o">-</span> <span class="n">target</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">]</span><span class="o">*</span><span class="n">inputs</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Г╛╛Д╦─Д╦╙Е┘┐Г╢═Г └ loss Д╦╨:"</span><span class="p">,</span> <span class="n">loss_1</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>Г╛╛Д╦─Д╦╙Е┘┐Г╢═Г └ loss Д╦╨: tensor(2.2363)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Г■╠Д╨▌Х©≥И┤▄Ф┬▒Д╩╛Г └ <code class="language-plaintext highlighter-rouge">log_input=True</code>О╪▄И╩≤Х╝╓Х╬⌠Е┘╔Д╦╨Е╞╧Ф∙╟Е╫╒Е╪▐О╪▄Х╝║Г╝≈Е┤╨Г └Г╛╛Д╦─Д╦╙Г╔·Г╩▐Е┘┐Г └ loss Д╦╨ $2.2363$О╪▄Д╦▌Е┴█И²╒ PyTorch Д╦╜ <code class="language-plaintext highlighter-rouge">nn.PoissonNLLLoss</code> Г └Х╝║Г╝≈Г╩⌠Ф·°Д╦─Х┤╢Ц─┌</p>

<h4 id="nnkldivloss"><code class="language-plaintext highlighter-rouge">nn.KLDivLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Х╝║Г╝≈ KL Ф∙ёЕ╨╕ (KL divergence, KLD)О╪▄Е█ЁГ⌡╦Е╞╧Г├╣Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">KLDivLoss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean/batchmean</code>Ц─┌
    <ul>
      <li><code class="language-plaintext highlighter-rouge">none</code>О╪ И─░Д╦╙Е┘┐Г╢═Х╝║Г╝≈Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">sum</code>О╪ Ф┴─Ф°┴Е┘┐Г╢═Ф╠┌Е▓▄О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">mean</code>О╪ Е┼═Ф²┐Е╧ЁЕ²┤О╪▄Х©■Е⌡·Ф═┤И┤▐Ц─┌</li>
      <li><code class="language-plaintext highlighter-rouge">batchmean</code>О╪ <code class="language-plaintext highlighter-rouge">batchsize</code> Г╩╢Е╨╕Ф╠┌Е╧ЁЕ²┤Е─╪Ц─┌</li>
    </ul>
  </li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\begin{aligned}
D_{\mathrm{KL}}(P,Q) = \mathrm{E}_{X\sim P}\left[\log \dfrac{P(X)}{Q(X)}\right] &amp;= \mathrm{E}_{X\sim P}[\log P(X) - \log Q(X)] \\[2ex]
&amp;= \sum_{i=1}^{n} P(x_i)(\log P(x_i) - \log Q(x_i))
\end{aligned}\]

<p>Е┘╤Д╦╜О╪▄$P$ Д╦╨Ф∙╟Ф█╝Г └Г°÷Е╝·Е┬├Е╦┐О╪▄$Q$ Д╦╨Ф╗║Е·▀Ф▀÷Е░┬Г └Е┬├Е╦┐Ц─┌</p>

<p>PyTorch Д╦╜Г └Х╝║Г╝≈Е┘╛Е╪▐О╪ </p>

\[l_n = y_n \cdot (\log y_n - x_n)\]

<p>Г■╠Д╨▌ PyTorch Ф≤╞И─░Д╦╙Е┘┐Г╢═Х╝║Г╝≈Г └О╪▄Е⌡═Ф╜╓Е▐╞Д╩╔Г╖╩И≥╓ $\Sigma$ Ф╠┌Е▓▄И║╧Ц─┌Х─▄Ф▀╛Е▐╥Д╦╜Г╛╛Д╨▄И║╧Х©≥И┤▄Ф≤╞ $x_n$О╪▄Х─▄Д╦█Ф≤╞ $\log Q(x_n)$О╪▄Е⌡═Ф╜╓Ф┬▒Д╩╛И°─Х╕│Ф▐░Е┴█Х╝║Г╝≈Х╬⌠Е┘╔Г └Е╞╧Ф∙╟Ф╕┌Г▌┤Ц─┌</p>

<p><strong>ФЁ╗Ф└▐Д╨▀И║╧</strong>О╪ И°─Ф▐░Е┴█Е╟├Х╬⌠Е┘╔Х╝║Г╝≈ log-probabilitiesО╪▄Д╬▀Е╕┌И─ Х©┤ <code class="language-plaintext highlighter-rouge">nn.logsoftmax()</code> Х╝║Г╝≈Ц─┌</p>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">]])</span>
<span class="n">inputs_log</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mf">0.9</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>

<span class="n">loss_f_none</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">KLDivLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss_f_mean</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">KLDivLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span><span class="p">)</span>
<span class="n">loss_f_bs_mean</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">KLDivLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'batchmean'</span><span class="p">)</span>

<span class="n">loss_none</span> <span class="o">=</span> <span class="n">loss_f_none</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
<span class="n">loss_mean</span> <span class="o">=</span> <span class="n">loss_f_mean</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
<span class="n">loss_bs_mean</span> <span class="o">=</span> <span class="n">loss_f_bs_mean</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"loss_none:</span><span class="se">\n</span><span class="s">{}</span><span class="se">\n</span><span class="s">loss_mean:</span><span class="se">\n</span><span class="s">{}</span><span class="se">\n</span><span class="s">loss_bs_mean:</span><span class="se">\n</span><span class="s">{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">loss_none</span><span class="p">,</span> <span class="n">loss_mean</span><span class="p">,</span> <span class="n">loss_bs_mean</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre>loss_none:
tensor([[-0.5448, -0.1648, -0.1598],
        [-0.2503, -0.4597, -0.4219]])
loss_mean:
-0.3335360586643219
loss_bs_mean:
-1.000608205795288
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Г■╠Д╨▌Ф┬▒Д╩╛Г └Х╬⌠Е┘╔Ф≤╞Д╦─Д╦╙ $2\times 3$ Г └ TensorО╪▄Ф┴─Д╩╔Ф┬▒Д╩╛Г └ loss Д╧÷Ф≤╞Д╦─Д╦╙ $2\times 3$ Г └ TensorЦ─┌Е°╗ <code class="language-plaintext highlighter-rouge">mean</code> Ф╗║Е╪▐Д╦▀О╪▄Ф┬▒Д╩╛Е╬≈Е┬╟ 6 Д╦╙ loss Г └Е²┤Е─╪Д╦╨ $-0.3335$О╪⌡Х─▄ <code class="language-plaintext highlighter-rouge">batchmean</code> Ф╗║Е╪▐Д╦▀Ф≤╞ 6 Д╦╙ loss Г⌡╦Е┼═Е├█И≥╓Д╩╔ $2$О╪▄Ф┴─Д╩╔Е╬≈Е┬╟ $-1.0006$Ц─┌</p>

<p>Д╦▀И²╒Ф┬▒Д╩╛Д╩╔Г╛╛Д╦─Д╦╙Г╔·Г╩▐Е┘┐Г └ loss Д╦╨Д╬▀О╪▄И─ Х©┤Ф┴▀Е┼╗Х╝║Г╝≈Ф²╔И╙▄Х╞│ PyTorch Д╦╜Г └Е┘╛Е╪▐Ф≤╞Е░╕Е▓▄Ф┬▒Д╩╛Д╧▀Е┴█Ф▐░Е┬╟Г └Д╦─Х┤╢О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">loss_1</span> <span class="o">=</span> <span class="n">target</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">target</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">])</span> <span class="o">-</span> <span class="n">inputs</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">])</span>  <span class="c1">#  ФЁ╗Ф└▐О╪▄Х©≥И┤▄Ф▀╛Е▐╥Д╦╜Г╛╛Д╨▄И║╧Ф╡║Ф°┴Е▐√ log
</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Г╛╛Д╦─Д╦╙Е┘┐Г╢═Г └ loss Д╦╨:"</span><span class="p">,</span> <span class="n">loss_1</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>Г╛╛Д╦─Д╦╙Е┘┐Г╢═Г └ loss Д╦╨: tensor(-0.5448)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Ф┴▀Е┼╗Х╝║Г╝≈Г └Г╩⌠Ф·°Д╦▌Е┴█И²╒ PyTorch Д╦╜Г └ <code class="language-plaintext highlighter-rouge">nn.KLDivLoss</code> Г └Г╩⌠Ф·°Д╦─Х┤╢Ц─┌</p>

<h4 id="nnmarginrankingloss"><code class="language-plaintext highlighter-rouge">nn.MarginRankingLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Х╝║Г╝≈Д╦╓Д╦╙Е░▒И┤▐Д╧▀И≈╢Г └Г⌡╦Д╪╪Е╨╕О╪▄Г■╗Д╨▌ <strong>Ф▌▓Е╨▐Д╩╩Е┼║</strong>Ц─┌Х╞╔Ф√╧ФЁ∙Х╝║Г╝≈Д╦╓Г╩└Ф∙╟Ф█╝Д╧▀И≈╢Г └Е╥╝Е╪┌О╪▄Х©■Е⌡·Д╦─Д╦╙ $n\times n$ Г └ loss Г÷╘И≤╣Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">MarginRankingLoss</span><span class="p">(</span>
    <span class="n">margin</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">margin</code>О╪ Х╬╧Г∙▄Е─╪О╪▄$x_1$ Д╦▌ $x_2$ Д╧▀И≈╢Г └Е╥╝Е╪┌Е─╪Ц─┌</li>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌</li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\mathrm{loss}(x,y)= \max (0, -y \cdot (x_1 - x_2) + \mathrm{margin})\]

<ul>
  <li>Е╫⌠ $y=1$ Ф≈╤О╪▄Ф┬▒Д╩╛Е╦▄Ф°⌡ $x_1$ Ф╞■ $x_2$ Е╓╖О╪▄Е╫⌠ $x_1 &gt; x_2$ Ф≈╤О╪▄ Д╦█Д╨╖Г■÷ lossЦ─┌</li>
  <li>Е╫⌠ $y=-1$ Ф≈╤О╪▄Ф┬▒Д╩╛Е╦▄Ф°⌡ $x_2$ Ф╞■ $x_1$ Е╓╖О╪▄Е╫⌠ $x_2 &gt; x_1$ Ф≈╤О╪▄Д╦█Д╨╖Г■÷ lossЦ─┌</li>
</ul>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="n">x1</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>
<span class="n">x2</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>

<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>

<span class="n">loss_f_none</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MarginRankingLoss</span><span class="p">(</span><span class="n">margin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f_none</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">loss</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>tensor([[1., 1., 0.],
        [0., 0., 0.],
        [0., 0., 1.]])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Г■╠Д╨▌Х©≥И┤▄Ф┬▒Д╩╛Г └Х╬⌠Е┘╔Ф≤╞Д╦╓Д╦╙И∙©Е╨╕Д╦╨ $3$ Г └Е░▒И┤▐О╪▄Ф┴─Д╩╔Х╬⌠Е┤╨Г └Ф≤╞Д╦─Д╦╙ $3\times 3$ Г └ loss Г÷╘И≤╣Ц─┌Х╞╔Г÷╘И≤╣Д╦╜Г └Г╛╛Д╦─Х║▄Ф≤╞Г■╠ <code class="language-plaintext highlighter-rouge">x1</code> Д╦╜Г └Г╛╛Д╦─Д╦╙Е┘┐Г╢═Д╦▌ <code class="language-plaintext highlighter-rouge">x2</code> Д╦╜Г └Д╦┴Д╦╙Е┘┐Г╢═Х╝║Г╝≈Е╬≈Е┬╟Г └ lossЦ─┌Е╫⌠ $y=1$ Ф≈╤О╪▄$x_1 =1$О╪▄$x_2=2$О╪▄$x_1$ Е╧╤Ф╡║Ф°┴Е╓╖Д╨▌ $x_2$О╪▄Е⌡═Ф╜╓Д╪ Д╨╖Г■÷ loss Д╦╨ $\max (0, -1\times (1 - 2)) = 1$О╪▄Ф┴─Д╩╔Х╬⌠Е┤╨Г÷╘И≤╣Д╦╜Г╛╛Д╦─Х║▄Г └Г╛╛Д╦─Д╦╙Е┘┐Г╢═Д╦╨ $1$О╪⌡Г╛╛Д╦─Х║▄Д╦╜Г └Г╛╛Д╨▄Д╦╙Е┘┐Г╢═Е░▄Г░├Ц─┌Е╞╧Д╨▌Г╛╛Д╦─Х║▄Д╦╜Г └Г╛╛Д╦┴Д╦╙Е┘┐Г╢═О╪▄$y = -1$О╪▄$x_1 =1$О╪▄$x_2=2$О╪▄Ф╩║Х╤Ё $x_2 &gt; x_1$О╪▄Е⌡═Ф╜╓Д╦█Д╪ Д╨╖Г■÷ lossО╪▄Е█Ё loss Д╦╨ $\max (0, 1\times (1 - 2)) = 0$О╪▄Ф┴─Д╩╔Х╬⌠Е┤╨Г÷╘И≤╣Д╦╜Г╛╛Д╦─Х║▄Г └Г╛╛Д╦┴Д╦╙Е┘┐Г╢═Д╦╨ $0$Ц─┌</p>

<h4 id="nnmultilabelmarginloss"><code class="language-plaintext highlighter-rouge">nn.MultiLabelMarginLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Е╓ Ф═┤Г╜╬Х╬╧Г∙▄Ф█÷Е╓╠Е┤╫Ф∙╟Ц─┌Д╬▀Е╕┌Е⌡⌡Е┬├Г╠╩Д╩╩Е┼║О╪▄Ф═╥Ф°╛ $x$ Е╠·Д╨▌Г╛╛ $0$ Г╠╩Е▓▄Г╛╛ $3$ Г╠╩О╪▄ФЁ╗Ф└▐Х©≥И┤▄Ф═┤Г╜╬Д╦╨ $[0,3,-1,-1]$О╪▄Х─▄Д╦█Ф≤╞ $[1,0,0,1]$Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">MultiLabelMarginLoss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌</li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\mathrm{loss}(x,y) = \sum_{ij}\dfrac{\max(0, 1-x[ y [j] ] - x[i])}{x.\mathrm{size}(0)}\]

<p>Е┘╤Д╦╜О╪▄$i=0,\dots,x.\mathrm{size}(0)\;,\;j=0,\dots,y.\mathrm{size}(0)$О╪▄Е╞╧Д╨▌Ф┴─Ф°┴Г └ $i$ Е▓▄ $j$О╪▄И┐╫Ф°┴ $y[j] \ge 0$ Е╧╤Д╦■ $i \ne y[j]$Ц─┌</p>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">x</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">]])</span>  <span class="c1"># Д╦─Д╦╙Е⌡⌡Е┬├Г╠╩Ф═╥Ф°╛Г └Х╬⌠Е┤╨Ф╕┌Г▌┤
</span><span class="n">y</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">long</span><span class="p">)</span>  <span class="c1"># Ф═┤Г╜╬О╪▄Х╞╔Ф═╥Ф°╛Е╠·Д╨▌Г╛╛ 0 Г╠╩Е▓▄Г╛╛ 3 Г╠╩
</span>
<span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MultiLabelMarginLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">loss</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>tensor([0.8500])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Д╦▀И²╒Ф┬▒Д╩╛И─ Х©┤Ф┴▀Е┼╗Х╝║Г╝≈Ф²╔И╙▄Х╞│Е┴█И²╒Х╝║Г╝≈Е┘╛Е╪▐Г └Ф╜ёГ║╝Ф─╖О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">item_1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>    <span class="c1"># Г╛╛ 0 Г╠╩Ф═┤Г╜╬Г └ loss
</span><span class="n">item_2</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>    <span class="c1"># Г╛╛ 3 Г╠╩Ф═┤Г╜╬Г └ loss
</span>
<span class="n">loss_h</span> <span class="o">=</span> <span class="p">(</span><span class="n">item_1</span> <span class="o">+</span> <span class="n">item_2</span><span class="p">)</span> <span class="o">/</span> <span class="n">x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">loss_h</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>tensor(0.8500)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Ф┴▀Е┼╗Х╝║Г╝≈Г └Г╩⌠Ф·°Д╦▌ PyTorch Д╦╜Г └ <code class="language-plaintext highlighter-rouge">nn.MultiLabelMarginLoss</code> Г └Г╩⌠Ф·°Д╦─Х┤╢Ц─┌</p>

<h4 id="nnsoftmarginloss"><code class="language-plaintext highlighter-rouge">nn.SoftMarginLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ Х╝║Г╝≈Д╨▄Е┬├Г╠╩Г └ logistic Ф█÷Е╓╠Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">SoftMarginLoss</span><span class="p">(</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌</li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\mathrm{loss}(x,y) = \sum_i \dfrac{\log(1 + \exp (-y[i] \cdot x[i]))}{x.\mathrm{nelement()}}\]

<p>Е┘╤Д╦╜О╪▄$x.\mathrm{nelement()}$ Д╦╨Х╬⌠Е┘╔ $x$ Д╦╜Г └Ф═╥Ф°╛Д╦╙Ф∙╟Ц─┌ФЁ╗Ф└▐Х©≥И┤▄ $y$ Д╧÷Ф°┴ $1$ Е▓▄ $-1$ Д╦╓Г╖█Ф╗║Е╪▐Ц─┌</p>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">]])</span>  <span class="c1"># Д╦╓Д╦╙Ф═╥Ф°╛О╪▄Д╦╓Д╦╙Г╔·Г╩▐Е┘┐
</span><span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>  <span class="c1"># Х╞╔ loss Д╦╨И─░Д╦╙Г╔·Г╩▐Е┘┐Х╝║Г╝≈О╪▄И°─Х╕│Д╦╨Ф╞▐Д╦╙Г╔·Г╩▐Е┘┐Е█∙Г▀╛Х╝╬Г╫╝Ф═┤Г╜╬
</span>
<span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">SoftMarginLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"SoftMargin: "</span><span class="p">,</span> <span class="n">loss</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>SoftMargin:  tensor([[0.8544, 0.4032],
        [0.4741, 0.9741]])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Д╦▀И²╒Ф┬▒Д╩╛Д╩╔Г╛╛Д╦─Д╦╙Г╔·Г╩▐Е┘┐Г └ loss Д╦╨Д╬▀О╪▄И┤┤Г■╗Ф┴▀Е┼╗Х╝║Г╝≈Ф²╔И╙▄Х╞│Д╦┼И²╒Е┘╛Е╪▐Г └Ф╜ёГ║╝Ф─╖О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">inputs_i</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">]</span>
<span class="n">target_i</span> <span class="o">=</span> <span class="n">target</span><span class="p">[</span><span class="n">idx</span><span class="p">,</span> <span class="n">idx</span><span class="p">]</span>

<span class="n">loss_h</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">target_i</span> <span class="o">*</span> <span class="n">inputs_i</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">loss_h</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>tensor(0.8544)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Ф┴▀Е┼╗Х╝║Г╝≈Г └Г╩⌠Ф·°Д╦▌ PyTorch Д╦╜Г └ <code class="language-plaintext highlighter-rouge">nn.SoftMarginLoss</code> Г └Г╩⌠Ф·°Д╦─Х┤╢Ц─┌</p>

<h4 id="nnmultilabelsoftmarginloss"><code class="language-plaintext highlighter-rouge">nn.MultiLabelSoftMarginLoss</code></h4>

<p><strong>Е┼÷Х┐╫</strong>О╪ <code class="language-plaintext highlighter-rouge">SoftMarginLoss</code> Г └Е╓ Ф═┤Г╜╬Г┴┬Ф°╛Ц─┌</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="n">nn</span><span class="p">.</span><span class="n">MultiLabelSoftMarginLoss</span><span class="p">(</span>
    <span class="n">weight</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">size_average</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="nb">reduce</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
    <span class="n">reduction</span><span class="o">=</span><span class="s">'mean'</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>Д╦╩Х╕│Е▐┌Ф∙╟</strong>О╪ </p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">weight</code>О╪ Е░└Г╠╩Е┬╚Г └ loss Х╝╬Г╫╝Ф²┐Е─╪Ц─┌</li>
  <li><code class="language-plaintext highlighter-rouge">reduction</code>О╪ Х╝║Г╝≈Ф╗║Е╪▐О╪▄Е▐╞Д╦╨ <code class="language-plaintext highlighter-rouge">none/sum/mean</code>Ц─┌</li>
</ul>

<p><strong>Х╝║Г╝≈Е┘╛Е╪▐</strong>О╪ </p>

\[\mathrm{loss}(x,y)= - \dfrac{1}{C} \cdot \sum_i y[i] \cdot \log\left(\dfrac{1}{1+\exp(-x[i]))} \right) + (1-y[i]) \cdot \log \left(\dfrac{\exp(-x[i])}{1+\exp(-x[i]))} \right)\]

<p>Е┘╤Д╦╜О╪▄$C$ Ф≤╞Ф═┤Г╜╬Г╠╩Е┬╚Г └Ф∙╟И┤▐О╪▄$i$ Х║╗Г╓╨Г╛╛ $i$ Д╦╙Г╔·Г╩▐Е┘┐О╪▄Х©≥И┤▄Ф═┤Г╜╬Е▐√Е─╪Д╦╨ $0$ Ф┬√Х─┘ $1$О╪▄Д╬▀Е╕┌Е°╗Д╦─Д╦╙Е⌡⌡Е┬├Г╠╩Д╩╩Е┼║Д╦╜О╪▄Ф÷░Ф═╥Ф°╛Ф═┤Г╜╬Д╦╨Г╛╛ $0$ Г╠╩Е▓▄Г╛╛ $3$ Г╠╩О╪▄И┌ёД╧┬Х╞╔Ф═╥Ф°╛Г └Ф═┤Г╜╬Е░▒И┤▐Д╦╨ $[1,0,0,1]$Ц─┌</p>

<p><strong>Д╩ёГ═│Г╓╨Д╬▀</strong>О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">inputs</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mf">0.3</span><span class="p">,</span> <span class="mf">0.7</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">]])</span>
<span class="n">target</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">tensor</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="nb">float</span><span class="p">)</span>

<span class="n">loss_f</span> <span class="o">=</span> <span class="n">nn</span><span class="p">.</span><span class="n">MultiLabelSoftMarginLoss</span><span class="p">(</span><span class="n">reduction</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">loss</span> <span class="o">=</span> <span class="n">loss_f</span><span class="p">(</span><span class="n">inputs</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"MultiLabel SoftMargin: "</span><span class="p">,</span> <span class="n">loss</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>MultiLabel SoftMargin:  tensor([0.5429])
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Д╦▀И²╒Ф┬▒Д╩╛И─ Х©┤Ф┴▀Е┼╗Х╝║Г╝≈И╙▄Х╞│Д╦┼И²╒Е┘╛Е╪▐Г └Ф╜ёГ║╝Ф─╖О╪ </p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">i_0</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">torch</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">inputs</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">torch</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">inputs</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">])))</span>
<span class="n">i_1</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">torch</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">inputs</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">])))</span>
<span class="n">i_2</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">torch</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">inputs</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">])))</span>

<span class="n">loss_h</span> <span class="o">=</span> <span class="p">(</span><span class="n">i_0</span> <span class="o">+</span> <span class="n">i_1</span> <span class="o">+</span> <span class="n">i_2</span><span class="p">)</span> <span class="o">/</span> <span class="o">-</span><span class="mi">3</span>

<span class="k">print</span><span class="p">(</span><span class="n">loss_h</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Х╬⌠Е┤╨Г╩⌠Ф·°О╪ </p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>tensor(0.5429)
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Е▐╞Д╩╔Г°▀Е┬╟О╪▄Ф┴▀Е┼╗Х╝║Г╝≈Г └Г╩⌠Ф·°Д╦▌ PyTorch Д╦╜Г └ <code class="language-plaintext highlighter-rouge">nn.MultiLabelSoftMarginLoss</code> Г └Г╩⌠Ф·°Д╦─Х┤╢Ц─┌</p>

<p>Д╦▀Х┼┌Е├┘Е╝╧О╪ Ф█÷Е╓╠Е┤╫Ф∙╟ (Д╨▄)</p>
:ET